// 代码
[CentOS-root@xdlinux ➜ cpp_test ]$ cat add.cpp
#include <iostream>

int add(int a, int b) {
    return a + b;
}

int main() {
    int num1 = 5;
    int num2 = 3;
    int result = add(num1, num2);
    std::cout << "两数之和为: " << result << std::endl;
    return 0;
}

// 编译 
[CentOS-root@xdlinux ➜ cpp_test ]$ g++ -o add_test add.cpp

// readelf查看ELF文件信息
[CentOS-root@xdlinux ➜ cpp_test ]$ readelf -a add_test 
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x400790
  Start of program headers:          64 (bytes into file)
  Start of section headers:          16360 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         9
  Size of section headers:           64 (bytes)
  Number of section headers:         30
  Section header string table index: 29

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000400238  00000238
       000000000000001c  0000000000000000   A       0     0     1
  [ 2] .note.ABI-tag     NOTE             0000000000400254  00000254
       0000000000000020  0000000000000000   A       0     0     4
  [ 3] .note.gnu.build-i NOTE             0000000000400274  00000274
       0000000000000024  0000000000000000   A       0     0     4
  [ 4] .gnu.hash         GNU_HASH         0000000000400298  00000298
       0000000000000030  0000000000000000   A       5     0     8
  [ 5] .dynsym           DYNSYM           00000000004002c8  000002c8
       0000000000000138  0000000000000018   A       6     1     8
  [ 6] .dynstr           STRTAB           0000000000400400  00000400
       0000000000000176  0000000000000000   A       0     0     1
  [ 7] .gnu.version      VERSYM           0000000000400576  00000576
       000000000000001a  0000000000000002   A       5     0     2
  [ 8] .gnu.version_r    VERNEED          0000000000400590  00000590
       0000000000000040  0000000000000000   A       6     2     8
  [ 9] .rela.dyn         RELA             00000000004005d0  000005d0
       0000000000000078  0000000000000018   A       5     0     8
  [10] .rela.plt         RELA             0000000000400648  00000648
       00000000000000a8  0000000000000018  AI       5    22     8
  [11] .init             PROGBITS         00000000004006f0  000006f0
       000000000000001b  0000000000000000  AX       0     0     4
  [12] .plt              PROGBITS         0000000000400710  00000710
       0000000000000080  0000000000000010  AX       0     0     16
  [13] .text             PROGBITS         0000000000400790  00000790
       0000000000000225  0000000000000000  AX       0     0     16
  [14] .fini             PROGBITS         00000000004009b8  000009b8
       000000000000000d  0000000000000000  AX       0     0     4
  [15] .rodata           PROGBITS         00000000004009c8  000009c8
       0000000000000023  0000000000000000   A       0     0     8
  [16] .eh_frame_hdr     PROGBITS         00000000004009ec  000009ec
       0000000000000054  0000000000000000   A       0     0     4
  [17] .eh_frame         PROGBITS         0000000000400a40  00000a40
       0000000000000148  0000000000000000   A       0     0     8
  [18] .init_array       INIT_ARRAY       0000000000600dc8  00000dc8
       0000000000000010  0000000000000008  WA       0     0     8
  [19] .fini_array       FINI_ARRAY       0000000000600dd8  00000dd8
       0000000000000008  0000000000000008  WA       0     0     8
  [20] .dynamic          DYNAMIC          0000000000600de0  00000de0
       0000000000000200  0000000000000010  WA       6     0     8
  [21] .got              PROGBITS         0000000000600fe0  00000fe0
       0000000000000020  0000000000000008  WA       0     0     8
  [22] .got.plt          PROGBITS         0000000000601000  00001000
       0000000000000050  0000000000000008  WA       0     0     8
  [23] .data             PROGBITS         0000000000601050  00001050
       0000000000000004  0000000000000000  WA       0     0     1
  [24] .bss              NOBITS           0000000000601060  00001054
       0000000000000118  0000000000000000  WA       0     0     32
  [25] .comment          PROGBITS         0000000000000000  00001054
       0000000000000058  0000000000000001  MS       0     0     1
  [26] .gnu.build.attrib NOTE             0000000000a01178  000010ac
       0000000000001b90  0000000000000000           0     0     4
  [27] .symtab           SYMTAB           0000000000000000  00002c40
       0000000000000ab0  0000000000000018          28    86     8
  [28] .strtab           STRTAB           0000000000000000  000036f0
       00000000000007d8  0000000000000000           0     0     1
  [29] .shstrtab         STRTAB           0000000000000000  00003ec8
       0000000000000119  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  l (large), p (processor specific)

There are no section groups in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000400040 0x0000000000400040
                 0x00000000000001f8 0x00000000000001f8  R      0x8
  INTERP         0x0000000000000238 0x0000000000400238 0x0000000000400238
                 0x000000000000001c 0x000000000000001c  R      0x1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x0000000000000b88 0x0000000000000b88  R E    0x200000
  LOAD           0x0000000000000dc8 0x0000000000600dc8 0x0000000000600dc8
                 0x000000000000028c 0x00000000000003b0  RW     0x200000
  DYNAMIC        0x0000000000000de0 0x0000000000600de0 0x0000000000600de0
                 0x0000000000000200 0x0000000000000200  RW     0x8
  NOTE           0x0000000000000254 0x0000000000400254 0x0000000000400254
                 0x0000000000000044 0x0000000000000044  R      0x4
  GNU_EH_FRAME   0x00000000000009ec 0x00000000004009ec 0x00000000004009ec
                 0x0000000000000054 0x0000000000000054  R      0x4
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x0000000000000dc8 0x0000000000600dc8 0x0000000000600dc8
                 0x0000000000000238 0x0000000000000238  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .text .fini .rodata .eh_frame_hdr .eh_frame 
   03     .init_array .fini_array .dynamic .got .got.plt .data .bss 
   04     .dynamic 
   05     .note.ABI-tag .note.gnu.build-id 
   06     .eh_frame_hdr 
   07     
   08     .init_array .fini_array .dynamic .got 

Dynamic section at offset 0xde0 contains 27 entries:
  Tag        Type                         Name/Value
 0x0000000000000001 (NEEDED)             Shared library: [libstdc++.so.6]
 0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]
 0x0000000000000001 (NEEDED)             Shared library: [libgcc_s.so.1]
 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]
 0x000000000000000c (INIT)               0x4006f0
 0x000000000000000d (FINI)               0x4009b8
 0x0000000000000019 (INIT_ARRAY)         0x600dc8
 0x000000000000001b (INIT_ARRAYSZ)       16 (bytes)
 0x000000000000001a (FINI_ARRAY)         0x600dd8
 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)
 0x000000006ffffef5 (GNU_HASH)           0x400298
 0x0000000000000005 (STRTAB)             0x400400
 0x0000000000000006 (SYMTAB)             0x4002c8
 0x000000000000000a (STRSZ)              374 (bytes)
 0x000000000000000b (SYMENT)             24 (bytes)
 0x0000000000000015 (DEBUG)              0x0
 0x0000000000000003 (PLTGOT)             0x601000
 0x0000000000000002 (PLTRELSZ)           168 (bytes)
 0x0000000000000014 (PLTREL)             RELA
 0x0000000000000017 (JMPREL)             0x400648
 0x0000000000000007 (RELA)               0x4005d0
 0x0000000000000008 (RELASZ)             120 (bytes)
 0x0000000000000009 (RELAENT)            24 (bytes)
 0x000000006ffffffe (VERNEED)            0x400590
 0x000000006fffffff (VERNEEDNUM)         2
 0x000000006ffffff0 (VERSYM)             0x400576
 0x0000000000000000 (NULL)               0x0

Relocation section '.rela.dyn' at offset 0x5d0 contains 5 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000600fe0  000600000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0
000000600fe8  000700000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.2.5 + 0
000000600ff0  000800000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0
000000600ff8  000900000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0
000000601060  000b00000005 R_X86_64_COPY     0000000000601060 _ZSt4cout@GLIBCXX_3.4 + 0

Relocation section '.rela.plt' at offset 0x648 contains 7 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000601018  000a00000007 R_X86_64_JUMP_SLO 0000000000400720 _ZSt4endlIcSt11char_tr@GLIBCXX_3.4 + 0
000000601020  000100000007 R_X86_64_JUMP_SLO 0000000000000000 __cxa_atexit@GLIBC_2.2.5 + 0
000000601028  000200000007 R_X86_64_JUMP_SLO 0000000000000000 _ZStlsISt11char_traits@GLIBCXX_3.4 + 0
000000601030  000300000007 R_X86_64_JUMP_SLO 0000000000000000 _ZNSolsEPFRSoS_E@GLIBCXX_3.4 + 0
000000601038  000400000007 R_X86_64_JUMP_SLO 0000000000000000 _ZNSt8ios_base4InitC1E@GLIBCXX_3.4 + 0
000000601040  000500000007 R_X86_64_JUMP_SLO 0000000000000000 _ZNSolsEi@GLIBCXX_3.4 + 0
000000601048  000c00000007 R_X86_64_JUMP_SLO 0000000000400780 _ZNSt8ios_base4InitD1E@GLIBCXX_3.4 + 0

The decoding of unwind sections for machine type Advanced Micro Devices X86-64 is not currently supported.

Symbol table '.dynsym' contains 13 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_atexit@GLIBC_2.2.5 (3)
     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZStlsISt11char_traitsIcE@GLIBCXX_3.4 (2)
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZNSolsEPFRSoS_E@GLIBCXX_3.4 (2)
     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4 (2)
     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZNSolsEi@GLIBCXX_3.4 (2)
     6: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab
     7: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (3)
     8: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
     9: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable
    10: 0000000000400720     0 FUNC    GLOBAL DEFAULT  UND _ZSt4endlIcSt11char_trait@GLIBCXX_3.4 (2)
    11: 0000000000601060   272 OBJECT  GLOBAL DEFAULT   24 _ZSt4cout@GLIBCXX_3.4 (2)
    12: 0000000000400780     0 FUNC    GLOBAL DEFAULT  UND _ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4 (2)

Symbol table '.symtab' contains 114 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 
     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 
     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 
     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 
     5: 00000000004002c8     0 SECTION LOCAL  DEFAULT    5 
     6: 0000000000400400     0 SECTION LOCAL  DEFAULT    6 
     7: 0000000000400576     0 SECTION LOCAL  DEFAULT    7 
     8: 0000000000400590     0 SECTION LOCAL  DEFAULT    8 
     9: 00000000004005d0     0 SECTION LOCAL  DEFAULT    9 
    10: 0000000000400648     0 SECTION LOCAL  DEFAULT   10 
    11: 00000000004006f0     0 SECTION LOCAL  DEFAULT   11 
    12: 0000000000400710     0 SECTION LOCAL  DEFAULT   12 
    13: 0000000000400790     0 SECTION LOCAL  DEFAULT   13 
    14: 00000000004009b8     0 SECTION LOCAL  DEFAULT   14 
    15: 00000000004009c8     0 SECTION LOCAL  DEFAULT   15 
    16: 00000000004009ec     0 SECTION LOCAL  DEFAULT   16 
    17: 0000000000400a40     0 SECTION LOCAL  DEFAULT   17 
    18: 0000000000600dc8     0 SECTION LOCAL  DEFAULT   18 
    19: 0000000000600dd8     0 SECTION LOCAL  DEFAULT   19 
    20: 0000000000600de0     0 SECTION LOCAL  DEFAULT   20 
    21: 0000000000600fe0     0 SECTION LOCAL  DEFAULT   21 
    22: 0000000000601000     0 SECTION LOCAL  DEFAULT   22 
    23: 0000000000601050     0 SECTION LOCAL  DEFAULT   23 
    24: 0000000000601060     0 SECTION LOCAL  DEFAULT   24 
    25: 0000000000000000     0 SECTION LOCAL  DEFAULT   25 
    26: 0000000000a01178     0 SECTION LOCAL  DEFAULT   26 
    27: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS /usr/lib/gcc/x86_64-redha
    28: 00000000004007bf     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c
    29: 00000000004007bf     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c_end
    30: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c.hot
    31: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c_end.hot
    32: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c.unlikely
    33: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c_end.unlik
    34: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c.startup
    35: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c_end.start
    36: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c.exit
    37: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_init.c_end.exit
    38: 00000000004007c0     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c
    39: 00000000004007c5     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c_e
    40: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c.h
    41: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c_e
    42: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c.u
    43: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c_e
    44: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c.s
    45: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c_e
    46: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c.e
    47: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_static_reloc.c_e
    48: 00000000004007c0     0 NOTYPE  LOCAL  HIDDEN    13 .annobin__dl_relocate_sta
    49: 00000000004007c5     0 NOTYPE  LOCAL  HIDDEN    13 .annobin__dl_relocate_sta
    50: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS elf-init.oS
    51: 0000000000400940     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c
    52: 00000000004009b5     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c_end
    53: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c.hot
    54: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c_end.h
    55: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c.unlik
    56: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c_end.u
    57: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c.start
    58: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c_end.s
    59: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c.exit
    60: 0000000000400790     0 NOTYPE  LOCAL  HIDDEN    13 .annobin_elf_init.c_end.e
    61: 0000000000400940     0 NOTYPE  LOCAL  HIDDEN    13 .annobin___libc_csu_init.
    62: 00000000004009a5     0 NOTYPE  LOCAL  HIDDEN    13 .annobin___libc_csu_init.
    63: 00000000004009a5     0 NOTYPE  LOCAL  HIDDEN    13 .annobin___libc_csu_fini.
    64: 00000000004009b5     0 NOTYPE  LOCAL  HIDDEN    13 .annobin___libc_csu_fini.
    65: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    66: 00000000004007d0     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones
    67: 0000000000400800     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones
    68: 0000000000400840     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux
    69: 0000000000601170     1 OBJECT  LOCAL  DEFAULT   24 completed.7295
    70: 0000000000600dd8     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin
    71: 0000000000400870     0 FUNC    LOCAL  DEFAULT   13 frame_dummy
    72: 0000000000600dc8     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_
    73: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS add.cpp
    74: 00000000004009d8     1 OBJECT  LOCAL  DEFAULT   15 _ZStL19piecewise_construc
    75: 0000000000601171     1 OBJECT  LOCAL  DEFAULT   24 _ZStL8__ioinit
    76: 00000000004008e5    62 FUNC    LOCAL  DEFAULT   13 _Z41__static_initializati
    77: 0000000000400923    21 FUNC    LOCAL  DEFAULT   13 _GLOBAL__sub_I__Z3addii
    78: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    79: 0000000000400b84     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__
    80: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    81: 00000000004009ec     0 NOTYPE  LOCAL  DEFAULT   16 __GNU_EH_FRAME_HDR
    82: 0000000000600de0     0 OBJECT  LOCAL  DEFAULT   20 _DYNAMIC
    83: 0000000000600dd8     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end
    84: 0000000000600dc8     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start
    85: 0000000000601000     0 OBJECT  LOCAL  DEFAULT   22 _GLOBAL_OFFSET_TABLE_
    86: 0000000000601054     0 NOTYPE  GLOBAL DEFAULT   23 _edata
    87: 0000000000601050     0 NOTYPE  WEAK   DEFAULT   23 data_start
    88: 00000000004009c8     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used
    89: 000000000040088a    91 FUNC    GLOBAL DEFAULT   13 main
    90: 0000000000400720     0 FUNC    GLOBAL DEFAULT  UND _ZSt4endlIcSt11char_trait
    91: 00000000004009d0     0 OBJECT  GLOBAL HIDDEN    15 __dso_handle
    92: 00000000004009b8     0 FUNC    GLOBAL HIDDEN    14 _fini
    93: 0000000000400876    20 FUNC    GLOBAL DEFAULT   13 _Z3addii
    94: 00000000004007c0     5 FUNC    GLOBAL HIDDEN    13 _dl_relocate_static_pie
    95: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __cxa_atexit@@GLIBC_2.2.5
    96: 0000000000400790    47 FUNC    GLOBAL DEFAULT   13 _start
    97: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZStlsISt11char_traitsIcE
    98: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZNSolsEPFRSoS_E@@GLIBCXX
    99: 00000000004006f0     0 FUNC    GLOBAL HIDDEN    11 _init
   100: 0000000000601058     0 OBJECT  GLOBAL HIDDEN    23 __TMC_END__
   101: 0000000000601060   272 OBJECT  GLOBAL DEFAULT   24 _ZSt4cout@@GLIBCXX_3.4
   102: 0000000000601050     0 NOTYPE  GLOBAL DEFAULT   23 __data_start
   103: 0000000000601178     0 NOTYPE  GLOBAL DEFAULT   24 _end
   104: 0000000000601054     0 NOTYPE  GLOBAL DEFAULT   24 __bss_start
   105: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZNSt8ios_base4InitC1Ev@@
   106: 0000000000400940   101 FUNC    GLOBAL DEFAULT   13 __libc_csu_init
   107: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZNSolsEi@@GLIBCXX_3.4
   108: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab
   109: 00000000004009b0     5 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini
   110: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_
   111: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
   112: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable
   113: 0000000000400780     0 FUNC    GLOBAL DEFAULT  UND _ZNSt8ios_base4InitD1Ev@@

Histogram for `.gnu.hash' bucket list length (total of 3 buckets):
 Length  Number     % of total  Coverage
      0  1          ( 33.3%)
      1  1          ( 33.3%)     33.3%
      2  1          ( 33.3%)    100.0%

Version symbols section '.gnu.version' contains 13 entries:
 Addr: 0000000000400576  Offset: 0x000576  Link: 5 (.dynsym)
  000:   0 (*local*)       3 (GLIBC_2.2.5)   2 (GLIBCXX_3.4)   2 (GLIBCXX_3.4)
  004:   2 (GLIBCXX_3.4)   2 (GLIBCXX_3.4)   0 (*local*)       3 (GLIBC_2.2.5)
  008:   0 (*local*)       0 (*local*)       2 (GLIBCXX_3.4)   2 (GLIBCXX_3.4)
  00c:   2 (GLIBCXX_3.4)

Version needs section '.gnu.version_r' contains 2 entries:
 Addr: 0x0000000000400590  Offset: 0x000590  Link: 6 (.dynstr)
  000000: Version: 1  File: libc.so.6  Cnt: 1
  0x0010:   Name: GLIBC_2.2.5  Flags: none  Version: 3
  0x0020: Version: 1  File: libstdc++.so.6  Cnt: 1
  0x0030:   Name: GLIBCXX_3.4  Flags: none  Version: 2

Displaying notes found in: .note.ABI-tag
  Owner                 Data size	Description
  GNU                  0x00000010	NT_GNU_ABI_TAG (ABI version tag)
    OS: Linux, ABI: 3.2.0

Displaying notes found in: .note.gnu.build-id
  Owner                 Data size	Description
  GNU                  0x00000014	NT_GNU_BUILD_ID (unique build ID bitstring)
    Build ID: 08d8121f61d7c670df416855ea8815677f5ed56c

Displaying notes found in: .gnu.build.attributes
  Owner                 Data size	Description
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x4007bf to 0x4007bf (.annobin_init.c)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x4007bf
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x4007bf
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x4007bf
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x4007bf
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x4007c0 to 0x4007c5 (.annobin_static_reloc.c)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x4007c0 to 0x4007c5
  GA*cf_protection:0x008 0x00000010	func
    Applies to region from 0x4007c0 to 0x4007c5 (_dl_relocate_static_pie)
  GA*FORTIFY:0x0000000ff 0x00000000	func
    Applies to region from 0x4007c0 to 0x4007c5
  GA+GLIBCXX_ASSERTION: 0x00000000	func
    Applies to region from 0x4007c0 to 0x4007c5
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>off   0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x0000000ff 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>pie          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x400790 to 0x4007bf (.annobin_init.c.hot)
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4007bf to 0x4007bf (.annobin_init.c)
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4007c5 to 0x4007c5 (.annobin_static_reloc.c_end)
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4006f0 to 0x400706
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4009b8 to 0x4009c0
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4007d0 to 0x400876
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400940 to 0x4009b5 (.annobin_elf_init.c)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA*<stack prot>stron 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA*FORTIFY:0x000000002 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA*<PIC>PIC          0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400940 to 0x4009b5
  GA*cf_protection:0x008 0x00000010	func
    Applies to region from 0x400940 to 0x4009a5 (__libc_csu_init)
  GA*FORTIFY:0x000000002 0x00000000	func
    Applies to region from 0x400940 to 0x4009a5
  GA+GLIBCXX_ASSERTION: 0x00000000	func
    Applies to region from 0x400940 to 0x4009a5
  GA*cf_protection:0x008 0x00000010	func
    Applies to region from 0x4009a5 to 0x4009b5
  GA*FORTIFY:0x000000002 0x00000000	func
    Applies to region from 0x4009a5 to 0x4009b5
  GA+GLIBCXX_ASSERTION: 0x00000000	func
    Applies to region from 0x4009a5 to 0x4009b5
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>stron 0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x000000002 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>PIC          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>stron 0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x000000002 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>PIC          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>stron 0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x000000002 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>PIC          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3p965    0x00000010	OPEN
    Applies to region from 0x400790 to 0x400790 (.annobin_init.c.hot)
  GA$<tool>running gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<tool>annobin gcc 0x00000000	OPEN
    Applies to region from 0x400790
  GA*GOW:0x000000002452a 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<stack prot>stron 0x00000000	OPEN
    Applies to region from 0x400790
  GA+stack_clash:true  0x00000000	OPEN
    Applies to region from 0x400790
  GA*cf_protection:0x008 0x00000000	OPEN
    Applies to region from 0x400790
  GA*FORTIFY:0x000000002 0x00000000	OPEN
    Applies to region from 0x400790
  GA+GLIBCXX_ASSERTION: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<PIC>PIC          0x00000000	OPEN
    Applies to region from 0x400790
  GA!<short enum>false 0x00000000	OPEN
    Applies to region from 0x400790
  GA+omit_frame_pointe: 0x00000000	OPEN
    Applies to region from 0x400790
  GA*<ABI>0x000000000012 0x00000000	OPEN
    Applies to region from 0x400790
  GA!stack_realign:fal 0x00000000	OPEN
    Applies to region from 0x400790
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4009b5 to 0x4009b5 (.annobin_elf_init.c_end)
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4009b5 to 0x4009b5 (.annobin_elf_init.c_end)
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x400706 to 0x40070b
  GA$<version>3a1      0x00000010	OPEN
    Applies to region from 0x4009c0 to 0x4009c5